from telegram import Update
from telegram.ext import CallbackContext, CommandHandler
from backend.services.artist_service import ArtistService
from backend.services.painting_service import PaintingService


def list_artists(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤"""
    artists = ArtistService.get_all()
    if not artists:
        update.message.reply_text("–í –≥–∞–ª–µ—Ä–µ–µ –ø–æ–∫–∞ –Ω–µ—Ç —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤.")
        return

    message = "üé® –•—É–¥–æ–∂–Ω–∏–∫–∏ –≤ –≥–∞–ª–µ—Ä–µ–µ:\n\n" + \
              "\n".join(f"{i + 1}. {artist.name}" for i, artist in enumerate(artists))

    update.message.reply_text(message)


def show_painting(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∏–Ω–µ"""
    try:
        painting_id = int(context.args[0])
        painting = PaintingService.get_by_id(painting_id)

        if not painting:
            update.message.reply_text("–ö–∞—Ä—Ç–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        message = (
            f"üñº <b>{painting.title}</b>\n\n"
            f"üë®‚Äçüé® –•—É–¥–æ–∂–Ω–∏–∫: {painting.artist.name}\n"
            f"üìÖ –ì–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è: {painting.year}\n"
            f"üé≠ –°—Ç–∏–ª—å: {painting.style}\n\n"
            f"{painting.description}"
        )

        update.message.reply_text(message, parse_mode='HTML')

    except (IndexError, ValueError):
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /painting <ID_–∫–∞—Ä—Ç–∏–Ω—ã>")


def setup_content_handlers(dispatcher):
    dispatcher.add_handler(CommandHandler("artists", list_artists))
    dispatcher.add_handler(CommandHandler("painting", show_painting))