import base64
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import requests


# Настройки YandexGPT
YANDEX_API_URL = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
IAM_TOKEN = "AQVNz7P5YQRTOidVd08ZLNbqfeKVUrFhareRXbCg"  # Замените на реальный
FOLDER_ID = "b1gc46r88aeb0jn8autn"   # Из Yandex Cloud
# Логирование
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# Состояния диалога
WAITING_FOR_DESCRIPTION = 1
IN_CONVERSATION = 2


async def start_yanGPT(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Обработчик команды /yanGPT"""
    await update.message.reply_text(
        "Привет! Ты можешь:\n"
        "1. Написать описание картины — я угадаю её название и автора. Обязательно используй слово 'описание'\n"
        "2. Просто поболтать со мной.\n\n"
        "Попробуй! Например: 'описание: Русский витязь перед камнем с предупреждением'"
    )
    context.user_data['state'] = IN_CONVERSATION


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Обработка текста"""
    user_text = update.message.text
    if any(word in user_text.lower() for word in ["описане", "описание", "описанеи"]):
        response = await guess_painting(user_text)
    else:
        response = await generate_chat_response(user_text)

    await update.message.reply_text(response)

async def guess_painting(description: str) -> str:
    """Определение картины по описанию через Yandex GPT"""
    prompt = (f'представь, что след несколько картин - твоя база данных на выставке'
              f'1. Апофеоз войны  '
              f'Автор: Василий Верещагин  '
              f'Год создания: 1871  '
              f'Стиль: Реализм  '
              f'Описание: Одна из самых известных антивоенных работ в мировой живописи. Изображает пирамиду из человеческих черепов на фоне пустынного пейзажа с мёртвыми деревьями и стаей воронов. Картина выражает протест против бессмысленности и жестокости войны.  '
              f'Ключевые слова: война, антивоенная, черепа, пустыня, разрушение  '
              f'2. Берёзовая роща  '
              f'Автор: Архип Куинджи  '
              f'Год создания: 1879  '
              f'Стиль: Романтизм  '
              f'Описание: Солнечный пейзаж с берёзами, где игра света создаёт ощущение свежести и глубины. Характерная работа Куинджи с уникальным световым решением.  '
              f'Ключевые слова: берёзы, свет, пейзаж, природа  '
              f'3. Богатыри  '
              f'Автор: Виктор Васнецов  '
              f'Год создания: 1898  '
              f'Стиль: Романтизм  '
              f'Описание: Изображение трёх легендарных русских богатырей - Ильи Муромца, Добрыни Никитича и Алёши Поповича. Символизирует силу и патриотизм.  '
              f'Ключевые слова: богатыри, Древняя Русь, героизм  '
              f'4. Бурлаки на Волге  '
              f'Автор: Илья Репин  '
              f'Год создания: 1873  '
              f'Стиль: Реализм  '
              f'Описание: Изображает группу бурлаков, тянущих баржу. Картина поднимает тему социальной несправедливости и тяжёлого труда.  '
              f'Ключевые слова: бурлаки, труд, социальная тема '
              f'5. Видение отроку Варфоломею  '
              f'Автор: Михаил Нестеров  '
              f'Год создания: 1890  '
              f'Стиль: Символизм  '
              f'Описание: Изображает юного Варфоломея (будущего Сергия Радонежского) в момент чудесного видения. Проникнута духовностью и тишиной.'
              f'Ключевые слова: религия, чудо, духовность'
              f'6. Витязь на распутье'
              f'Автор: Виктор Васнецов'
              f'Год создания: 1882'
              f'Стиль: Романтизм'
              f'Описание: Русский витязь перед камнем с предупреждением. Создаёт атмосферу былинной таинственности.'
              f'Ключевые слова: витязь, былина, выбор'
              f'7. Грачи прилетели'
              f'Автор: Алексей Саврасов'
              f'Год создания: 1871'
              f'Стиль: Реализм'
              f'Описание: Весенний пейзаж с грачами, символизирующий пробуждение природы. Один из самых известных русских пейзажей.'
              f'Ключевые слова: весна, грачи, пейзаж'
              f'8. Девочка с персиками'
              f'Автор: Валентин Серов'
              f'Год создания: 1887'
              f'Стиль: Импрессионизм'
              f'Описание: Портрет Веры Мамонтовой. Светлый, наполненный воздухом образ, ставший символом юности.'
              f'Ключевые слова: портрет, юность, свет'
              f'9. Девятый вал'
              f'Автор: Иван Айвазовский'
              f'Год создания: 1850'
              f'Стиль: Романтизм'
              f'Описание: Драматическое изображение моря после шторма с людьми, борющимися с волнами.'
              f'Ключевые слова: море, шторм, стихия'
              f'10. Иван Грозный и сын его Иван'
              f'Автор: Илья Репин'
              f'Год создания: 1885'
              f'Стиль: Реализм'
              f'Описание: Момент, когда Иван Грозный убивает своего сына. Выражает ужас и раскаяние.'
              f'Ключевые слова: Иван Грозный, трагедия, история'
              f'11. На севере диком'
              f'Автор: Иван Шишкин'
              f'Год создания: 1890'
              f'Стиль: Реализм'
              f'Описание: Одинокая сосна в снегах. Передаёт суровую красоту северной природы.'
              f'Ключевые слова: зима, сосна, пейзаж'
              f'12. Над городом'
              f'Автор: Марк Шагал'
              f'Год создания: 1918'
              f'Стиль: Авангард'
              f'Описание: Летающие влюблённые над городом. Характерный для Шагала сказочный сюжет.'
              f'Ключевые слова: любовь, полёт, фантазия'
              f'13. Последний день Помпеи'
              f'Автор: Карл Брюллов'
              f'Год создания: 1833'
              f'Стиль: Классицизм'
              f'Описание: Драматическая сцена гибели Помпеи. Сочетает ужас катастрофы с красотой форм.'
              f'Ключевые слова: катастрофа, античность, драма'
              f'14. Утро в сосновом лесу'
              f'Автор: Иван Шишкин'
              f'Год создания: 1889'
              f'Стиль: Реализм'
              f'Описание: Лесной пейзаж с медведями. Один из самых узнаваемых русских пейзажей.'
              f'Ключевые слова: лес, медведи, природа'
              f'15. Явление Христа народу'
              f'Автор: Александр Иванов'
              f'Год создания: 1857'
              f'Стиль: Академизм'
              f'Описание: Монументальное полотно с многофигурной композицией, изображающее момент явления Христа.'
              f'Ключевые слова: Христос, религия, библейский сюжет'
              f'теперь какой-то посетитель галереи задает тебе вопрос и дает свое описание картины. ты должен из перечня (свой базы данных картин) найти более подходящую и выдать ее название'
              f'вот вопрос и описание пользователя: {description}'
            )
    return await call_yandex_gpt(prompt)

async def generate_chat_response(user_text: str) -> str:
    """Генерация ответа для диалога"""
    prompt = (
        f"Ты дружелюбный ИИ-помощник в Telegram. "
        f"Пользователь написал: '{user_text}'. "
        f"Ответь кратко и естественно (максимум 2 предложения)."
    )
    return await call_yandex_gpt(prompt)

async def call_yandex_gpt(prompt: str) -> str:
    """Запрос к Yandex GPT API"""
    headers = {
        "Authorization": f"Bearer {IAM_TOKEN}",
        "Content-Type": "application/json",
    }
    data = {
        "modelUri": f"gpt://{FOLDER_ID}/yandexgpt-lite",
        "completionOptions": {
            "temperature": 0.5,
            "maxTokens": 200
        },
        "messages": [{"role": "user", "text": prompt}]
    }
    try:
        response = requests.post(YANDEX_API_URL, headers=headers, json=data).json()
        return response.get("result", {}).get("alternatives", [{}])[0].get("message", {}).get("text", "Ошибка обработки запроса.")
    except Exception as e:
        logger.error(f"Yandex GPT error: {e}")
        return "Упс, что-то пошло не так..."

def main():
    app = Application.builder().token("7676755249:AAGQm0NwIgD6kCPyTtbJBI5WjsA3AcX5dps").build()
    app.add_handler(CommandHandler("yanGPT", start_yanGPT))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()

if __name__ == "__main__":
    main()